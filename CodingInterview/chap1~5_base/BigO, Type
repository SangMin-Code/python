Big-O : 입력값이 무한대로 향할 때 함수의 상한을 설명하는 수학적 표기 방법
         빅오 표기법은 주어진(최선/최악/평균) 경우의 수행 시간의 상한을 나타낸다.

분할 상환 분석 : 분할상환 또는 상각이라고 표현하는 최악의 경우를 여러 번에 걸쳐 골고루 나눠주는
    형태로 알고리즘의 시간 복잡도를 계산할 수 있다.

병렬화 : GPU의 각각의 코어를 이용하여 각 코어는 cpu보다는 느리지만 병렬 연산으로 더 빠른 연산을 가능케 함

자료형
숫자 : 파이선 버전 3부터 int 단일형으로 통합되어 임의정밀도를 지원한다.
    버전 2까지 int, C 스타일의 고정 정밀도, Long의 임의정밀도 정수형을 제공하였고
    2.4 이후 자동으로 long타입으로 변경되는 구조가 되었다.
    *bool은 엄밀히 따지면 논리자료형이나 파이선 내부적으로 int의 서브 클래스이다.
     True==1
     True
     False==0
     True
    *임의정밀도
     정수를 자릿수 단위로 쪼개어 배열 형태로 표현한다.
     -> 자릿수 단위로 구분한 값을 별도로 계산하여 처리한다.
        결과적으로 계산 속도는 저하되나 단일형으로 숫자를 처리하므로 언어를 매우 단순한 구조로 만들 수 있고
        오버플로를 고민할 필요가 없다. Java에서 BigInteger 자료형이 이와 같다.

Mapping (매핑)
    키와 자료형으로 구성된 복합 자료형이며 파이선에 내장된 유일한 매핑 자료형이 딕셔너리이다.

set (집합)
    집합 자료형인 set은 중복된 값을 갖지 않는다.
    a=set()
    a={'a','b','c'}
    set과 dictionary 모두 값을 이용하여 선언할 때 중괄호를 사용하지만
    dictionary는 key:value형태이므로 구분할 수 있다.
    set은 입력 형태가 유지되지 않으며 중복된 값이 있을 경우 하나의 값만 유지한다.

sequence(시퀀스)
    수열 같은 의미로 어떤 특정 대상의 순서 있는 나열을 뜻한다.
    시퀀스는 immutable과 mutable로 구분하는데
    str,tuple,bytes가 immutable이다.
    list는 mutable 이다.
    ex) a='abc'  #...1
        a='def'  #...2
        각각의 메모리 주소를 출력해보면  a변수는 abc와 def의 주소를 참조하도록 변경되었을 뿐이다.
        이를 변경하려면
        a[1]='d'
        -> TypeError : 'str' object does not support item assignment
        str은 immutable 이다.

원시타입
    C나 java는 원시타입을 제공한다. 원시타입은 메모리에 정확하게 타입 크기만큼의 공간을 할당하고
    그 공간을 오로지 값으로 채워넣는다. 자바는 원시 타입에 대응되는 클래스 객체를 지원한다.
    Integer  a = new Integer(5)
    객체로 만들면 부가 정보를 이용하여 다양한 기능을 지원하지만 JOL(java Obeject LayOut)을 확인해보면
    객체의 크기가 커진다.

객체
    파이선은 모든것이 객체로 불변객체와 가변 객체로 구분할 수 있다.

불변객체
    한번 값을 담아두면 더 이상 값을 변경할 수 없다.
    ex) bool, int, float, tuple, str
가변객체
    다른 변수를 참조하는것으로 값을 변경할 수 있다.
* is , ==
    is는 id()를 비교하는 함수이다. None은 널로서 값 자체가 정의되어 있지 않으므로 is로만 비교가 가능하다.
속도
    파이선은 객체를 사용하므로 원시객체를 사용하는 C 나 java에 비해서 속도가 느리다. 파이선의 과학 계산 모듈인
    numpy는 빠른 속도를 내지만 c로 만든 모듈로서 내부적으로 리스트를 c의 원시타입으로 사용하기 때문이다.
자료구조, 자료형, 추상 자료형
    자료구조란 데이터에 효율적으로 접근하고 조작하기 위한 데이터의 조직,관리,저장구조를 말한다.
    자료형은 컴파일러, 인터프리터에게 프로그래머가 데이터를 어떻게 사용하는지 알려주는 일종의 데이터 속성이다.
    그러므로 자료구조는 자료형의 관점에서 원시 자료형을 응용한 복합자료형이다.
    추상자료형은  ADT(Abstract Data Type)으로 자료형에대한 수학적 모델을 지칭한다. 즉 해당 유형의 자료에 대한
    연산들을 명기한 것이다. 추상화

